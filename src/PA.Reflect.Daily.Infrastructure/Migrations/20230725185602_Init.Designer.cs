// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PA.Reflect.Daily.Infrastructure.Data;

#nullable disable

namespace PA.Reflect.Daily.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230725185602_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PA.Reflect.Daily.Core.ProjectAggregate.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Filepath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReflectionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReflectionId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("PA.Reflect.Daily.Core.ProjectAggregate.Reflection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reflections");
                });

            modelBuilder.Entity("PA.Reflect.Daily.Core.ProjectAggregate.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProfilePictureUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PA.Reflect.Daily.Core.ProjectAggregate.Note", b =>
                {
                    b.HasOne("PA.Reflect.Daily.Core.ProjectAggregate.Reflection", null)
                        .WithMany("Notes")
                        .HasForeignKey("ReflectionId");
                });

            modelBuilder.Entity("PA.Reflect.Daily.Core.ProjectAggregate.Reflection", b =>
                {
                    b.HasOne("PA.Reflect.Daily.Core.ProjectAggregate.User", null)
                        .WithMany("Reflections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PA.Reflect.Daily.Core.ProjectAggregate.Reflection", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("PA.Reflect.Daily.Core.ProjectAggregate.User", b =>
                {
                    b.Navigation("Reflections");
                });
#pragma warning restore 612, 618
        }
    }
}
